<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for System_Controller_Action_Helper_Auth.
 * Generated by PHPUnit on 2009-10-05 at 16:55:41.
 */
class System_Controller_Action_Helper_AuthTest extends System_Test_DatabaseTestCase
{
	/**
	 * @var System_Controller_Action_Helper_Auth
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		parent::setUp();
		$this->object = new System_Controller_Action_Helper_Auth;
		$this->setBootstrap(System_Application::getInstance()->getBootstrap());
	}
	
	protected function setBootstrap($bootstrap){
		$this->object->setActionController(
			new System_Controller_Action_Helper_AuthTest_Action(
				$this->getMock('Zend_Controller_Request_Abstract'),
				$this->getMock('Zend_Controller_Response_Abstract'),
				array(
					'bootstrap' => $bootstrap
				)
			)
		);
	}
	
	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		
		Zend_Auth::getInstance()->clearIdentity();
		parent::tearDown();
	}

	public function testNotEjected()
	{
		$this->setBootstrap(null);
		$this->setExpectedException('System_Exception', 'Bootstrap is not injected');
		self::assertType('Zend_Auth', $this->object->getAuth());
	}

	public function testGetAuth()
	{
		self::assertType('Zend_Auth', $this->object->getAuth());
	}

	public function testGetUserException()
	{
		$this->setExpectedException('System_Exception');
		self::assertFalse($this->object->getAuth()->hasIdentity());
		$this->object->getUser();
	}
	
	public function testGetUser()
	{
		$username = 'testnames';
		$pwd = 'test';
		System_Locator_TableLocator::getInstance()->get('User')->createRow(array(
			'username'=>$username,
			'password'=>md5($pwd),
			'sponsorId'=>1
		))->save();
		
		$authAdapter = new Model_Auth_Adapter_User($username, $pwd);
		$result = $this->object->getAuth()->authenticate($authAdapter);
		self::assertTrue($result->isValid());
		
		$user = $this->object->getUser();
		self::assertType('Model_Row_User', $user);
		self::assertFalse($user->isReadOnly());
		self::assertTrue(isset($user->password));
		//var_dump($_SESSION);
	}
	
	public function testGetUserFindException()
	{
		$user = new Model_Row_User(array('data'=>array('id'=>0)));
		$this->object->getAuth()->getStorage()->write($user);
		$this->setExpectedException('System_Exception', 'No set user');
		$user = $this->object->getUser();
	}
	
}
class System_Controller_Action_Helper_AuthTest_Action extends Zend_Controller_Action {}
?>
