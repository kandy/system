<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for System_Controller_Plugin_Acl.
 * Generated by PHPUnit on 2009-09-22 at 16:55:36.
 */
class System_Controller_Plugin_AclTest extends System_Test_TestCase 
{
	/**
	 * @var System_Controller_Plugin_Acl
	 */
	protected $object;

	/**
	 * @var Zend_Acl
	 */
	protected $acl;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->acl = new Zend_Acl();
		$this->object = new System_Controller_Plugin_Acl($this->acl);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
	}

	/**
	 */
	public function testAcl() {
		self::assertGetterAndSetter($this->object, 'Acl', $this->acl);
	}


	/**
	 */
	public function testRole() {
		self::assertGetterAndSetter($this->object, 'Role', 'guest');
	}


	/**
	 */
	public function testErrorPage() {
		self::assertGetterAndSetter($this->object, 'ErrorPage',
			array(
			'module' => 'default',
			'controller' => 'error',
			'action' => 'denied')
		);
	}

	/**
	 */
	public function testGetResource() {
		$request = new Zend_Controller_Request_Simple(1,2,3);
		self::assertEquals('3.2.1', $this->object->getResource($request));
		self::assertTrue($this->acl->has('3.2.1'));
		self::assertTrue($this->acl->has('3.2'));
		self::assertTrue($this->acl->has('3'));
	}

	/**
	 */
	public function testPreDispatch() {

		$this->acl->addRole('guest');
		$request = new Zend_Controller_Request_Http();
		$request->setModuleName('1');
		$request->setControllerName('2');
		$request->setActionName('3');
		$this->object->preDispatch($request);

		self::assertEquals('default', $request->getModuleName());
		self::assertEquals('error', $request->getControllerName());
		self::assertEquals('denied', $request->getActionName());
	}

	/**
	 */
	public function testDenyAccess() {
		$request = new Zend_Controller_Request_Simple(1,2,3);
		$this->object->setRequest($request);
		$this->object->denyAccess();

		self::assertEquals('default', $request->getModuleName());
		self::assertEquals('error', $request->getControllerName());
		self::assertEquals('denied', $request->getActionName());

	}
}
?>
