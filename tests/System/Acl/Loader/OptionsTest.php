<?php
require_once 'PHPUnit/Framework.php';

/**
 *
 * Test class for System_Acl_Loader_Options.
 * Generated by PHPUnit on 2009-09-21 at 17:05:11.
 *
 */
class System_Acl_Loader_OptionsTest extends PHPUnit_Framework_TestCase
{

	/**
	 * @var System_Acl_Loader_Options
	 */
	protected $object;

	/**
	 * @var Zend_Acl
	 */
	protected $acl;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 *
	 * @covers System_Acl_Loader_Options
	 */
	protected function setUp() {
		$this->acl = new Zend_Acl();
		$this->object = new System_Acl_Loader_Options($this->acl);

	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
	}

	protected function optionsHelper($part, $data) {
		return array(System_Acl_Loader_Options::ACL => array($part => $data)
			);
	}
	/**
	 * @covers System_Acl_Loader_Options::load
	 * @covers System_Acl_Loader_Options::<protected>
	 */
	public function testLoadRolesNoParent() {
		$this->setExpectedException('Zend_Acl_Role_Registry_Exception');
		$this->object->setOptions($this->optionsHelper(System_Acl_Loader_Options::ROLES,
			array('test' => 'test1')
		));
		$acl = $this->object->load();
	}

	/**
	 * @covers System_Acl_Loader_Options::load
	 * @covers System_Acl_Loader_Options::<protected>
	 */
	public function testLoadRoles() {
		$this->object->setOptions($this->optionsHelper(System_Acl_Loader_Options::ROLES,
			array(
				'test' => null,
				'test1' => 'test'
			)
		));
		$this->object->load();
		self::assertTrue($this->acl->hasRole('test'));
		self::assertTrue($this->acl->hasRole('test1'));
		self::assertTrue($this->acl->inheritsRole('test1', 'test', true));
	}


	/**
	 * @covers System_Acl_Loader_Options::load
	 * @covers System_Acl_Loader_Options::<protected>
	 */
	public function testLoadResourcesNoParent() {
		$this->setExpectedException('Zend_Acl_Exception');
		$this->object->setOptions($this->optionsHelper(System_Acl_Loader_Options::RESOURCES,
			array('test' => 'test1')
		));
		$acl = $this->object->load();
	}

	/**
	 * @covers System_Acl_Loader_Options::load
	 * @covers System_Acl_Loader_Options::<protected>
	 */
	public function testLoadResources() {
		$this->object->setOptions($this->optionsHelper(System_Acl_Loader_Options::RESOURCES,
			array(
				'test' => null,
				'test1' => 'test'
			)
		));
		$this->object->load();
		self::assertTrue($this->acl->has('test'));
		self::assertTrue($this->acl->has('test1'));
		self::assertTrue($this->acl->inherits('test1', 'test'));
	}

	/**
	 * @covers System_Acl_Loader_Options::load
	 * @covers System_Acl_Loader_Options::<protected>
	 */
	public function testLoadRules() {
		$this->object->setOptions(array(System_Acl_Loader_Options::ACL => array(
			System_Acl_Loader_Options::RULE_ALLOW => array(
				'test' => array('test'),
				'test1' => array('res-res_res', 'res1')
			)
		)));
		$this->object->load();
		self::assertTrue($this->acl->isAllowed('test', 'test'));
		self::assertTrue($this->acl->isAllowed('test1', 'res1'));


		self::assertTrue($this->acl->has('res'));
		self::assertTrue($this->acl->inherits('res.res', 'res', true));
		self::assertTrue($this->acl->has('res.res'));
		self::assertTrue($this->acl->has('res.res.res'));

		self::assertFalse($this->acl->isAllowed('test1', 'res'));
		self::assertFalse($this->acl->isAllowed('test1', 'res.res'));
		self::assertTrue($this->acl->isAllowed('test1', 'res.res.res'));
	}


}


?>
