<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for System_Acl_Loader.
 * Generated by PHPUnit on 2009-09-21 at 15:05:45.
 *
 * @package system.tests
 */
class System_Acl_LoaderTest extends System_Test_TestCase
{
	/**
	 * @var Zend_Loader_PluginLoader_Interface
	 */
	protected $plugin;

	protected function setUp() {
		$this->plugin = System_Acl_Loader::getPluginLoader();
		System_Acl_Loader::setPluginLoader(new Zend_Loader_PluginLoader());
		System_Acl_Loader::getPluginLoader()->addPrefixPath('System_Acl_Loader',dirname(__FILE__));
	}

	protected function tearDown() {
		System_Acl_Loader::setPluginLoader($this->plugin);
	}

	/**
	 * @covers System_Acl_Loader::getPluginLoader
	 */
	public function testGetPluginLoader() {
		System_Acl_Loader::setPluginLoader(null);
		self::assertType('Zend_Loader_PluginLoader',System_Acl_Loader::getPluginLoader());
		self::assertEquals(array('System_Acl_Loader_' => array('System/Acl/Loader/')),System_Acl_Loader::getPluginLoader()->getPaths());
	}

	/**
	 * @covers System_Acl_Loader::getPluginLoader
	 * @covers System_Acl_Loader::setPluginLoader
	 */
	public function testSetPluginLoader() {
		$plugin = new Zend_Loader_PluginLoader();
		System_Acl_Loader::setPluginLoader($plugin);
		self::assertEquals($plugin, System_Acl_Loader::getPluginLoader());
	}

	/**
	 * @covers System_Acl_Loader::factory
	 */
	public function testFactory() {
		$acl = new Zend_Acl();
		$options = array('test' => 'test');
		$loader = System_Acl_Loader::factory('LoaderMock', $acl, $options);
		self::assertType('System_Acl_Loader_LoaderMock', $loader);
		self::assertEquals($acl, $loader->getAcl());
		self::assertEquals($options, $loader->getOptions());
	}

	/**
	 * @covers System_Acl_Loader::factory
	 */
	public function testFactoryForNotExistsClass() {
		$this->setExpectedException('Zend_Acl_Exception');
		$loader = System_Acl_Loader::factory('NotExistsClassLoader', new Zend_Acl(), array('test' => 'test'));
	}

	/**
	 * @covers System_Acl_Loader::factory
	 */
	public function testFactoryWithConfig() {
		$acl = new Zend_Acl();
		$options = array('test' => 'test', 'a' => array(1,2,3));
		$loader = System_Acl_Loader::factory('LoaderMock', $acl, new Zend_Config($options));
		self::assertEquals($options, $loader->getOptions());
	}

	public function testConstructWithoutParameters() {
		$loader = $this->getMock('System_Acl_Loader', array(), array());
		self::assertNotNull($loader);
	}
	
	public function testAcl() {
		$plugin = $this->getMockForAbstractClass('System_Acl_Loader', array(null, array('a'=>'b')));
		$this->assertGetterAndSetter($plugin, 'Acl', new Zend_Acl());
	}
}

