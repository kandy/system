<?php
require_once 'PHPUnit/Framework.php';

/**
 * Test class for System_View_Simple.
 * Generated by PHPUnit on 2009-05-22 at 15:48:01.
 *
 * @package system.tests
 */
class System_View_SimpleTest extends PHPUnit_Framework_TestCase 
{
	/**
	 * @var	System_View_Simple
	 * @access protected
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 *
	 * @access protected
	 */
	protected function setUp() {
		$this->object = new System_View_Simple;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 *
	 * @access protected
	 */
	protected function tearDown() {
	}

	/**
	 *
	 * @covers System_View_Simple::__construct
	 */
	public function testConstruct() {
		$dir = dirname(__FILE__) . '/';
		$s = new System_View_Simple(array('scriptPath' => $dir));
		self::assertEquals(array($dir), $s->getScriptPaths());
	}


	/**
	 * @covers System_View_Simple::getEngine
	 */
	public function testGetEngine() {
		self::assertEquals(get_class($this->object), $this->object->getEngine());
	}

	/**
	 * @covers System_View_Simple::addScriptPath
	 * @covers System_View_Simple::getScriptPaths
	 */
	public function testAddScriptPath() {
		$dir1 = dirname(__FILE__) . '/';
		$dir2 = dirname(__FILE__) . '/../';
		$this->object->addScriptPath($dir1);
		$this->object->addScriptPath($dir2);
		self::assertEquals(array($dir2, $dir1), $this->object->getScriptPaths());
	}


	/**
	 * @covers System_View_Simple::setScriptPath
	 * @covers System_View_Simple::getScriptPaths
	 */
	public function testSetScriptPath() {
		$dir1 = dirname(__FILE__) . '/';
		$dir2 = dirname(__FILE__) . '/../';
		$this->object->setScriptPath($dir1);
		$this->object->setScriptPath($dir2);
		self::assertEquals(array($dir2), $this->object->getScriptPaths());
	}



	/**
	 * @covers System_View_Simple::setBasePath
	 */
	public function testSetBasePath() {
		$dir = dirname(__FILE__) ;
		$this->object->setBasePath($dir);
		self::assertEquals(array($dir . '/scripts/'), $this->object->getScriptPaths());
	}

	 /**
	 * @covers System_View_Simple::addBasePath
	 */
	 public function testAddBasePath() {
		$dir = dirname(__FILE__) ;
		$this->object->addBasePath($dir);
		self::assertEquals(array($dir . '/scripts/'), $this->object->getScriptPaths());
	}


	/**
	 * @covers System_View_Simple::__isset
	 * @covers System_View_Simple::__unset
	 */
	public function testMagicIssetUnset() {
		$a = 'asda sasdf as,dr43iu765235y2456324 53rtb dfg\'"::';
		self::assertFalse(isset($this->object->a));
		$this->object->a = $a;
		self::assertTrue(isset($this->object->a));
		unset($this->object->a);
		self::assertFalse(isset($this->object->a));
	}

	/**
	 * @covers System_View_Simple::__set
	 * @covers System_View_Simple::__get

	 */
	public function testMagicSetGet() {
		$a = 'asda sasdf as,dr43iu765235y2456324 53rtb dfg\'"::';
		$this->object->a = $a;
		self::assertEquals($a, $this->object->a);
		self::assertNull($this->object->b);
	}

	/**
	 * @covers System_View_Simple::assign
	 */
	public function testAssignByName() {
		$a = 'asda sasdf as,dr43iu765235y2456324 53rtb dfg\'"::';
		$this->object->assign('a', $a);
		self::assertEquals($a, $this->object->a);
	}

	/**
	 * @covers System_View_Simple::assign
	 */
	public function testAssignArray() {
		$a = 'asda sasdf as,dr43iu765235y2456324 53rtb dfg\'"::';
		$a = 'asda sasdf as,dr43iu765235y2456324 53rtb dfg\'"::';
		$this->object->assign(array('a' => $a));
		self::assertEquals($a, $this->object->a);
	}

	/**
	 * @covers System_View_Simple::getVars
	 * @covers System_View_Simple::clearVars
	 */
	public function testGetVarsClearVars() {
		$a = 'asda sasdf as,dr43iu765235y2456324 53rtb dfg\'"::';
		$this->object->assign(array('a' => $a));
		self::assertEquals(array('a' => $a), $this->object->getVars());

		$this->object->clearVars();
		self::assertEquals(array(), $this->object->getVars());
	}


	/**
	 * @covers System_View_Simple::render
	 * @covers System_View_Simple::<protected>
	 */
	public function testRender() {
		self::assertEquals('', $this->object->render('asdasd'));
	}
}
